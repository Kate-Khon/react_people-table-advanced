{"version":3,"sources":["components/HomePage.tsx","components/PersonRow.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","api.ts","index.tsx"],"names":["HomePage","className","PersonRow","person","name","sex","born","died","motherName","fatherName","PeoplePage","people","useState","query","setQuery","filteredPeople","setFilteredPeople","type","value","onChange","event","currentQuery","target","filter","includes","map","slug","NotFoundPage","App","setPeople","useEffect","loading","a","fetch","then","res","json","data","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"wQAAaA,EAAW,kBACtB,mCACE,oBAAIC,UAAU,gBAAd,0BCKSC,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzCC,EAMED,EANFC,KACAC,EAKEF,EALFE,IACAC,EAIEH,EAJFG,KACAC,EAGEJ,EAHFI,KACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,WAGF,OACE,qBAAIR,UAAU,SAAd,UACE,6BAAKG,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,QChBEC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4CF,mBAASD,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KAaA,OACE,qCACE,oBAAIf,UAAU,gBAAd,yBACA,uBACEA,UAAU,QACVgB,KAAK,OACLC,MAAOL,EACPM,SAlBe,SAACC,GACpB,IAAMC,EAAeD,EAAME,OAAOJ,MAElCF,EAAkBL,EAAOY,QAAO,SAAApB,GAAM,OACpCA,EAAOC,KAAKoB,SAASH,IAClBlB,EAAOK,WAAWgB,SAASH,IAC3BlB,EAAOM,WAAWe,SAASH,OAEhCP,EAASO,MAYP,wBACEpB,UAAU,+CADZ,UASE,wBAAOA,UAAU,QAAjB,UACE,sCACA,qCACA,sCACA,sCACA,wCACA,2CAGF,gCACGc,EAAeU,KAAI,SAAAtB,GAAM,OACxB,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOuB,kBCpDtBC,EAAe,kBAC1B,oBAAI1B,UAAU,gBAAd,6BCcW2B,EAAM,WACjB,MAA4BhB,mBAAmB,IAA/C,mBAAOD,EAAP,KAAekB,EAAf,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAO,uCAAG,4BAAAC,EAAA,sECdXC,MAHG,qEAIPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UDaD,OACRC,EADQ,OAGdR,EAAUQ,GAHI,2CAAH,qDAMbN,MACC,IAGD,sBAAK9B,UAAU,gBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,oBAAIA,UAAU,aAAd,4BAGF,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CAASqC,GAAG,IAAZ,SACE,mBAAGrC,UAAU,OAAb,yBAGF,cAAC,IAAD,CAASqC,GAAG,SAAZ,SACE,mBAAGrC,UAAU,OAAb,8BAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,CAAY7B,OAAQA,MACnD,cAAC,IAAD,CAAO4B,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,aE3CjCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73e06ab6.chunk.js","sourcesContent":["export const HomePage = () => (\n  <>\n    <h1 className=\"subtitle is-3\">Home page</h1>\n  </>\n);\n","import React from 'react';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr className=\"Person\">\n      <td>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName}</td>\n      <td>{fatherName}</td>\n    </tr>\n  );\n};\n","import React, { useState } from 'react';\nimport { Person } from '../types/Person';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeoplePage: React.FC<Props> = ({ people }) => {\n  const [query, setQuery] = useState('');\n  const [filteredPeople, setFilteredPeople] = useState(people);\n\n  const filterPeople = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currentQuery = event.target.value;\n\n    setFilteredPeople(people.filter(person => (\n      person.name.includes(currentQuery)\n      || person.motherName.includes(currentQuery)\n      || person.fatherName.includes(currentQuery))));\n\n    setQuery(currentQuery);\n  };\n\n  return (\n    <>\n      <h1 className=\"subtitle is-3\">People page</h1>\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={query}\n        onChange={filterPeople}\n      />\n      <table\n        className=\"\n        PeopleTable\n        people_table\n        table\n        is-bordered\n      \"\n      >\n\n        <thead className=\"thead\">\n          <th>name</th>\n          <th>sex</th>\n          <th>born</th>\n          <th>died</th>\n          <th>mother</th>\n          <th>father</th>\n        </thead>\n\n        <tbody>\n          {filteredPeople.map(person => (\n            <PersonRow key={person.slug} person={person} />\n          ))}\n        </tbody>\n\n      </table>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"subtitle is-3\">Page not found</h1>\n);\n","import './App.scss';\nimport { useState, useEffect } from 'react';\nimport {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport { getPeople } from './api';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Person } from './types/Person';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const loading = async () => {\n      const data = await getPeople();\n\n      setPeople(data);\n    };\n\n    loading();\n  }, []);\n\n  return (\n    <div className=\"container box\">\n      <div className=\"App\">\n        <h1 className=\"title is-2\">People table</h1>\n      </div>\n\n      <nav className=\"nav\">\n        <NavLink to=\"/\">\n          <p className=\"link\">Home page</p>\n        </NavLink>\n\n        <NavLink to=\"people\">\n          <p className=\"link\">People page</p>\n        </NavLink>\n      </nav>\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage people={people} />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(URL)\n    .then(res => res.json());\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}